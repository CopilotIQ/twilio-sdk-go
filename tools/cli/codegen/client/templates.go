package client

const clientContent = `// This is an autogenerated file. DO NOT MODIFY
package {{ .packageName | ToLowerCase }}

{{ if .imports }} {{ range $index, $import := .imports }}
import "{{ $import }}" {{ end }} {{ end }}

type {{ .name }} struct {
	client *client.Client
	${addSubClientsToStruct}
}

// Used for testing purposes only
func (s {{ .name }}) GetClient() *client.Client {
	return s.client
}

func New(sess *session.Session) *{{.name}} {
	config := client.GetDefaultConfig()
	config.Beta = {{ .config.beta }}
	config.SubDomain = "{{ .config.subDomain }}"
	config.APIVersion = "{{ .config.apiVersion }}"

	return NewWithClient(client.New(sess, config))
}

func NewWithClient(client *client.Client) *{{ .name }} {
	return &{{.name}}{
		client: client,
		${addSubClientsToClient}
	}
}

func NewWithCredentials(creds *credentials.Credentials) *{{ .name }} {
	return New(session.New(creds))
}
`

const addSubClientsToStruct = `{{ if .subClients }} {{ range $index, $subClient := .subClients }}
	{{ $subClient.name }} {{ if .functionParams }} func({{ range $index, $functionParam := .functionParams }} {{ $functionParam.type }}, {{end}}) {{ end }} *{{ $subClient.name | ToSnakeCase }}.Client {{ end }} {{ end }}
`

const addSubClientsToClient = `{{ if .subClients }} {{ range $index, $subClient := .subClients }}
	{{ $subClient.name }}: ${addSubClientPropertyDetails}, {{ end }} {{ end }}
`

const addSubClientPropertyDetails = `{{ if .functionParams }} func({{ range $index, $functionParam := .functionParams }} {{ $functionParam.name }} {{ $functionParam.type }}, {{end}}) *{{ $subClient.name | ToSnakeCase }}.Client { return {{ $subClient.name | ToSnakeCase }}.New(client, {{ range $index, $functionParam := .functionParams }} {{ $functionParam.name }}, {{ end }}) } {{ else }} {{ $subClient.name | ToSnakeCase }}.New(client) {{ end }}`
