// This is an autogenerated file. DO NOT MODIFY
package assistants

import (
	"context"
	"net/http"
	"time"

	"github.com/RJPearson94/twilio-sdk-go/client"
	"github.com/RJPearson94/twilio-sdk-go/utils"
)

type AssistantsPageOptions struct {
	DateCreatedAfter      *time.Time
	DateCreatedOnOrBefore *time.Time
	From                  *string
	PageSize              *int
	Page                  *int
	PageToken             *string
	To                    *string
}

type PageAssistantResponse struct {
	AccountSid          string     `json:"account_sid"`
	CallbackEvents      *string    `json:"callback_events,omitempty"`
	CallbackURL         *string    `json:"callback_url,omitempty"`
	DateCreated         time.Time  `json:"date_created"`
	DateUpdated         *time.Time `json:"date_updated,omitempty"`
	DevelopmentStage    string     `json:"development_stage"`
	FriendlyName        *string    `json:"friendly_name,omitempty"`
	LatestModelBuildSid *string    `json:"latest_model_build_sid,omitempty"`
	LogQueries          bool       `json:"log_queries"`
	NeedsModelBuild     *bool      `json:"needs_model_build,omitempty"`
	Sid                 string     `json:"sid"`
	UniqueName          string     `json:"unique_name"`
	URL                 string     `json:"url"`
}

type PageMetaResponse struct {
	FirstPageURL    string  `json:"first_page_url"`
	Key             string  `json:"key"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            int     `json:"page"`
	PageSize        int     `json:"page_size"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             string  `json:"url"`
}

type AssistantsPageResponse struct {
	Assistants []PageAssistantResponse `json:"assistants"`
	Meta       PageMetaResponse        `json:"meta"`
}

func (c Client) Page(options *AssistantsPageOptions) (*AssistantsPageResponse, error) {
	return c.PageWithContext(context.Background(), options)
}

func (c Client) PageWithContext(context context.Context, options *AssistantsPageOptions) (*AssistantsPageResponse, error) {
	op := client.Operation{
		Method:      http.MethodGet,
		URI:         "/Assistants",
		QueryParams: utils.StructToStringMap(options),
	}

	response := &AssistantsPageResponse{}
	if err := c.client.Send(context, op, nil, response); err != nil {
		return nil, err
	}
	return response, nil
}
