// This is an autogenerated file. DO NOT MODIFY
package service

import (
	"context"
	"net/http"
	"time"

	"github.com/RJPearson94/twilio-sdk-go/client"
)

type UpdateServiceInput struct {
	FriendlyName       *string `form:"FriendlyName,omitempty"`
	IncludeCredentials *bool   `form:"IncludeCredentials,omitempty"`
	UiEditable         *bool   `form:"UiEditable,omitempty"`
}

type UpdateServiceResponse struct {
	AccountSid         string     `json:"account_sid"`
	DateCreated        time.Time  `json:"date_created"`
	DateUpdated        *time.Time `json:"date_updated,omitempty"`
	FriendlyName       string     `json:"friendly_name"`
	IncludeCredentials bool       `json:"include_credentials"`
	Sid                string     `json:"sid"`
	URL                string     `json:"url"`
	UiEditable         bool       `json:"ui_editable"`
	UniqueName         string     `json:"unique_name"`
}

func (c Client) Update(input *UpdateServiceInput) (*UpdateServiceResponse, error) {
	return c.UpdateWithContext(context.Background(), input)
}

func (c Client) UpdateWithContext(context context.Context, input *UpdateServiceInput) (*UpdateServiceResponse, error) {
	op := client.Operation{
		Method:      http.MethodPost,
		URI:         "/Services/{sid}",
		ContentType: client.URLEncoded,
		PathParams: map[string]string{
			"sid": c.sid,
		},
	}

	response := &UpdateServiceResponse{}
	if err := c.client.Send(context, op, input, response); err != nil {
		return nil, err
	}
	return response, nil
}
